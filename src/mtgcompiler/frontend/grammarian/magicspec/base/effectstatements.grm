//Statements concerning effects/events.

//TODO: Exchange control/life totals
//TODO: Double something, like the number of loyalty counters on a planeswalker
//TODO: Participles, like "dying" or "exiling"

//There might be a cleaner way to write this that recognizes transitive/intransitive, active/passive, direct/indirect, indicative/subjunctive, etc.
effectstatement: (entityexpression | auxvp beaux?)? effectvp relativeclause?
effectvp: effectverb entityexpression preposition? -> effectvpactive
| entityexpression? effectverb preposition? -> effectvppassive
| effectverb entityexpression? ("to"|"by") entityexpression preposition? -> effectvpindirect

relativeclause: ("that"|"who") effectstatement

effectverb: gainverb
| loseverb
| sacrificeverb
| exileverb
| destroyverb
| activateverb
| attackverb
| blockverb
| attachverb
| castverb
| uncastverb
| controlverb
| gaincontrolverb
| createverb
| drawverb
| discardverb
| fightverb
| playverb
| revealverb
| searchverb
| tapverb
| untapverb
| dealverb
| preventverb
| enterverb
| leaveverb
| chooseverb
| costverb
| getverb

gainverb: "gain"["s"] -> gainpresent
| "gained" -> gainpast
loseverb: "lose"["s"] -> losepresent
| "lost" -> losepast
sacrificeverb: "sacrifice"["s"] -> sacrificepresent
| "sacrificed" -> sacrificepast
exileverb: "exile"["s"] -> exilepresent
| "exiled" -> exilepast
destroyverb: "destroy"["s"] -> destroypresent
| "destroyed" -> destroypast
activateverb: "activate"["s"] -> activatepresent
| "activated" -> activatepast
exileverb: "exile"["s"] -> exilepresent
| "exiled" -> exilepast
attackverb: "attack"["s"] -> attackpresent
| "attacked" -> attackpast
blockverb: "block"["s"] -> blockpresent
| "blocked" -> blockpast
attachverb: "attach"["es"] -> attachpresent
| "attached" -> attachpast
castverb: "cast"["s"] -> castpresentpast
uncastverb: "counter"["s"] -> uncastpresent
| "countered" -> uncastpast
controlverb: "control"["s"] -> controlpresent
| "controlled" -> controlpast
gaincontrolverb: "gain"["s"] "control" "of" -> gaincontrolpresent
| "gained" "control" "of" -> gaincontrolpast
createverb: "create"["s"] -> createpresent
| "created" -> createpast
drawverb: "draw"["s"] -> drawpresent
| "drew" -> drawpast
| "drawn" -> drawsubjunctive
discardverb: "discard"["s"] -> discardpresent
| "discarded" -> discardpast
fightverb: "fight"["s"] -> fightpresent
| "fought" -> fightpast
playverb: "play"["s"] -> playpresent
| "played" -> playpast
revealverb: "reveal"["s"] -> revealpresent
| "revealed" -> revealpast
searchverb: "search"["es"] entity ["for"] -> revealpresent
| "searched" -> revealpast
tapverb: "tap"["s"] -> tappresent
| "tapped" -> tappast
untapverb: "untap"["s"] -> untappresent
| "untapped" -> untappast
dealverb: "deal"["s"] -> dealpresent
| "dealt" -> dealpast
preventverb: "prevent"["s"] -> preventpresent
| "prevented" -> preventpast
enterverb: "enter"["s"] -> enterpresent
| "entered" -> enterpast
leaveverb: "leave"["s"] -> leavepresent
| "left" -> leavepast
chooseverb: "choose"["s"] -> choosepresent
| "chose" -> choosepast
costverb: "cost"["s"] -> costpastpresent
getverb: "get"["s"] -> getpresent

preposition: "this" "way" | timeexpression

!auxvp: entityexpression? "may" -> optionalaux
| entityexpression? "would" -> subjunctiveaux
| entityexpression? "may" ("have" | "had") entityexpression -> delegationaux
| entityexpression? "can" ["not"] -> canaux
| entityexpression? "could" ["not"] -> couldaux
| entityexpression? "must" ["not"] -> mandatoryaux
beaux: "be"

